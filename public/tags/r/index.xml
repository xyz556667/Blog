<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on chuanMing</title>
    <link>/tags/r/</link>
    <description>Recent content in R on chuanMing</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 23 Apr 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>財金文字探勘專題--文字探勘簡介</title>
      <link>/2019/04/23/%E8%B2%A1%E9%87%91%E6%96%87%E5%AD%97%E6%8E%A2%E5%8B%98%E5%B0%88%E9%A1%8C-%E6%96%87%E5%AD%97%E6%8E%A2%E5%8B%98%E7%B0%A1%E4%BB%8B/</link>
      <pubDate>Tue, 23 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/04/23/%E8%B2%A1%E9%87%91%E6%96%87%E5%AD%97%E6%8E%A2%E5%8B%98%E5%B0%88%E9%A1%8C-%E6%96%87%E5%AD%97%E6%8E%A2%E5%8B%98%E7%B0%A1%E4%BB%8B/</guid>
      <description>前言現代金融業投資最基本的四大面向為基本面、技術面、籌碼面與消息面，而根據效率市場理論，台灣並不是強效率市場，因此消息面的資訊將與整體市場運作有緊密的相關性。在資訊爆炸的時代，掌握消息，就有套利機會。近年來，許多人運用文字探勘技術，在新聞、報章雜誌、公開說明書以及各大上市上櫃公司有關的消息中，找尋與公司獲利、股價趨勢以及營收變動等的關聯，期望藉由比他人提早洞知先機的機會，來獲得更高的報酬。&amp;gt;本專題欲藉由財金相關的文字探勘簡介與應用，當作敲門磚，與大眾分享文字探勘的概念與應用，更期許有朝一日，我們也能運用相關的技術賺取獲利。
文字探勘簡介文字探勘(Text mining)，也被稱為文本挖掘。一般而言，指的是從非結構化的文字中，萃取出有用的重要關鍵字詞或知識。簡單來說，就是文字版的資料探勘(Data Mining)。近年來文字探勘蓬勃發展，透過資訊擷取、資料探勘、機器學習、統計學、電腦語言學來達成目標任務，希望藉由自然語言處理（NLP）和分析方法，將文字轉化為資料進行分析。
文字探勘的基本步驟為 (1)信息檢索 (2)信息提取 (3)資料探勘。
(1) 信息檢索信息檢索又分為定義問題和目標設定，以及收集相關文本。我們必須先定義好我們想要處理的方向或主題，預期從文字裡獲得什麼樣的資訊，再收集相關且合適的文本。舉例而言，我們今天希望從新聞獲得未來科技類股股價會不會上漲的資訊，那我們就必須要收集與科技類股相關的財經新聞或報章雜誌。
(2) 信息提取信息提取又可以分為組織文本與特徵提取，我們把收集到的文本進行一些探勘前預處理，去除對整體文本較不具解釋力的停用詞，像是「的」或「是」等，接著再進行斷詞，獲得對於整篇文章較為重要的詞，當作我們要來進行分析的資料集。
(3) 資料探勘資料探勘的步驟與一般的Data Mining相當類似，即針對不同的目標，選用不同的資料探勘技術對經預處理過後的文本進行分析，並藉由分析獲得我們一開始想知道的目標資訊，或是找出新的概念以及關聯性。資料探勘技術包括連結和關聯分析、視覺化和預測分析等，像是TF-IDF、Word2Vec、LDA，皆為文字探勘之基本技術。
常見的文字探勘應用1. 文本分類 : 將文本根據不同主題編入類別。- 文章主題分類 (ex.把蒐集到的文章，給予幾個大主題，根據不同內容分類)- 郵件自動分類 (ex.辨識垃圾郵件)- 產業類股新聞分類 (ex.將蒐集到的新聞，依據不同產業分門別類)
2. 情緒分析 : 識別和提取文本中的主觀信息(例如:情感、信仰)。- 滿意度調查 (ex.對餐廳服務的滿意度)- 電影評論分析 (ex.根據電影評埨，分析大眾對電影的喜好程度)- 股票情緒分析 (ex.根據新聞內容，分析市場對股票的樂觀或悲觀態度)
3. 關鍵字提取 : 識別和提取文本中的最重要的元素。- 搜尋引擎 (ex.Google搜尋器，藉由搜尋的關鍵字，抓取相關內容)- 聲量調查 (ex.透過關鍵字的出現次數，觀察近期的熱門議題為何)- 熱門股票分析 (ex.根據關鍵字出現的頻率，觀察近期熱門股票趨勢)
4. 文本摘要 : 創建包含最重要元素的縮短版本的文本。- 新聞摘要 (ex.</description>
    </item>
    
    <item>
      <title>量化策略--主力吸貨</title>
      <link>/2019/04/23/%E9%87%8F%E5%8C%96%E7%AD%96%E7%95%A5-%E4%B8%BB%E5%8A%9B%E5%90%B8%E8%B2%A8/</link>
      <pubDate>Tue, 23 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/04/23/%E9%87%8F%E5%8C%96%E7%AD%96%E7%95%A5-%E4%B8%BB%E5%8A%9B%E5%90%B8%E8%B2%A8/</guid>
      <description>library(pacman)p_load(tidyverse,magrittr,quantmod)load(&amp;quot;主力/adjStockPriceData.RData&amp;quot;)colnames(adjStockPriceData)&amp;lt;-c(&amp;quot;code&amp;quot;,&amp;quot;name&amp;quot;,&amp;quot;date&amp;quot;,&amp;quot;open&amp;quot;,&amp;quot;high&amp;quot;,&amp;quot;low&amp;quot;,&amp;quot;close&amp;quot;,&amp;quot;volume&amp;quot;,&amp;quot;mktvalue&amp;quot;)code_list&amp;lt;-unique(adjStockPriceData$code)5日均量要9成要大於500張vol_require&amp;lt;-500require_ratio&amp;lt;-0.9code_Big_Vol&amp;lt;-adjStockPriceData %&amp;gt;% #filter(code==&amp;quot;1101 &amp;quot;)group_by(code) %&amp;gt;%dplyr::filter(n()&amp;gt;=252) %&amp;gt;%mutate(volMA5=SMA(volume,5),is_volbig500=ifelse(volMA5&amp;gt;vol_require,1,0)) %&amp;gt;% group_by(code) %&amp;gt;%summarise(volbig500_Ratio=mean(is_volbig500,na.rm=T)) %&amp;gt;%dplyr::filter(volbig500_Ratio&amp;gt;=require_ratio) %&amp;gt;% pull(code)adjStockPriceData&amp;lt;-adjStockPriceData %&amp;gt;% dplyr::filter(code %in% code_Big_Vol )找出主力吸貨股票進場位置standardKdays &amp;lt;- 90 # 標準K棒平均日數adjStockPriceData &amp;lt;- adjStockPriceData %&amp;gt;% group_by(code) %&amp;gt;%dplyr::filter(n()&amp;gt;=standardKdays) %&amp;gt;% # 股票交易日數需大於標準K棒平均日數 # 整理判斷條件所需資料mutate(open=as.numeric(open),MA5=SMA(close,5), # 5日移動平均線MA20=SMA(close,20), # 20日移動平均線MA60=SMA(close,60), # 60日移動平均線kbar=abs(open/close-1), # K棒絕對值大小 standardKbar=rollmean(x=kbar, k=standardKdays,fill=NA, align = &amp;quot;right&amp;quot;), # 計算標準K棒值長度lagkbar1=dplyr::lag(kbar,1), # 前一天K棒大小lagkbar2=dplyr::lag(kbar,2), # 前二天K棒大小lagOpen1=dplyr::lag(open,1), # 前一天開盤價lagOpen2=dplyr::lag(open,2), # 前二天開盤價lagClose1=dplyr::lag(close,1), # 前一天收盤價lagClose2=dplyr::lag(close,2), # 前二天收盤價leadOpen1=lead(open,1),Buy_date=lead(date,1))整理進場位置tradeTargetTable &amp;lt;- adjStockPriceData %&amp;gt;%dplyr::filter(lagClose1&amp;lt;lagOpen1, # 第t-1天的收盤價&amp;lt;第t-1天的開盤價(黑K)close&amp;gt;open, # 第t天的收盤價&amp;gt;第t天的開盤價(紅K)close&amp;gt;MA5,close&amp;gt;lagOpen1,lagClose1&amp;gt;open,kbar&amp;gt;(standardKbar*1.</description>
    </item>
    
  </channel>
</rss>